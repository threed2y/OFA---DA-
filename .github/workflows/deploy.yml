# .github/workflows/deploy.yml
# GitHub Actions workflow for automated deployment

name: Deploy Shiny App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.0'
        use-public-rspm: true
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libharfbuzz-dev libfribidi-dev
        
    - name: Setup R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache-version: 2
        
    - name: Install additional packages
      run: |
        install.packages(c("rsconnect", "rmarkdown"))
      shell: Rscript {0}
      
    - name: Check R package installation
      run: |
        cat("Checking installed packages...\n")
        packages <- c("shiny", "shinydashboard", "DT", "plotly", "dplyr", "ggplot2")
        for(pkg in packages) {
          if(require(pkg, character.only = TRUE, quietly = TRUE)) {
            cat("✓", pkg, "is available\n")
          } else {
            cat("✗", pkg, "is missing\n")
          }
        }
      shell: Rscript {0}
      
    - name: Test Shiny app
      run: |
        # Test that the app can be loaded without errors
        library(shiny)
        
        # Source the app file to check for syntax errors
        tryCatch({
          source("app.R")
          cat("✓ App loaded successfully\n")
        }, error = function(e) {
          cat("✗ Error loading app:", e$message, "\n")
          quit(status = 1)
        })
      shell: Rscript {0}
      
    - name: Deploy to ShinyApps.io
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
        SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
        SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
      run: |
        if [[ -n "$SHINYAPPS_ACCOUNT" && -n "$SHINYAPPS_TOKEN" && -n "$SHINYAPPS_SECRET" ]]; then
          library(rsconnect)
          
          # Configure ShinyApps.io account
          setAccountInfo(
            name = Sys.getenv("SHINYAPPS_ACCOUNT"),
            token = Sys.getenv("SHINYAPPS_TOKEN"),
            secret = Sys.getenv("SHINYAPPS_SECRET")
          )
          
          # Deploy the app
          deployApp(
            appName = "data-analytics-app",
            appTitle = "Data Analytics Dashboard",
            forceUpdate = TRUE,
            launch.browser = FALSE
          )
          
          cat("✓ Successfully deployed to ShinyApps.io\n")
        else
          cat("ℹ ShinyApps.io credentials not found. Skipping deployment.\n")
        fi
      shell: Rscript {0}
      
    - name: Generate deployment report
      run: |
        cat("# Deployment Report\n\n") > deployment_report.md
        cat("- **Date**: $(date)\n") >> deployment_report.md
        cat("- **Commit**: ${{ github.sha }}\n") >> deployment_report.md
        cat("- **Branch**: ${{ github.ref_name }}\n") >> deployment_report.md
        cat("- **Status**: Deployment completed\n") >> deployment_report.md
        
    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deployment-report
        path: deployment_report.md